[{"path":"https://z-my-cn.github.io/vse4ts/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 vse4ts authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mengyang Zheng. Author, maintainer. Hui Fu. Author.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu H, Chen W, X (2018). “class estimation test long memory.” Physica : Statistical Mechanics Applications, 509, 906-920. doi:10.1016/j.physa.2018.06.092.","code":"@Article{,   title = {On a class of estimation and test for long memory},   author = {Hui Fu and Wenting Chen and Xin-Jiang He},   journal = {Physica A: Statistical Mechanics and its Applications},   year = {2018},   volume = {509},   pages = {906-920},   doi = {10.1016/j.physa.2018.06.092}, }"},{"path":[]},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Identify Memory Patterns in Time Series Using Variance Scale Exponent","text":"Methods calculating variance scale exponent identify memory patterns time series data. Includes tests white noise, short memory, long memory. See Fu, H. et al. (2018)<doi:10.1016/j.physa.2018.06.092>.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify Memory Patterns in Time Series Using Variance Scale Exponent","text":"can install development version vse4ts GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"z-my-cn/vse4ts\")"},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Identify Memory Patterns in Time Series Using Variance Scale Exponent","text":"basic example use vse function vse4ts package: package also provides two hypothesis test functions Wnoise.test SLmemory.test test white noise short/long memory time series, respectively. example use Wnoise.test function SLmemory.test function vse4ts package:","code":"library(vse4ts) set.seed(123) x <- rnorm(1024) x.vse <- vse(x) print(x.vse) #> [1] 0.4987233 library(vse4ts) # install.packages(\"pracma\") library(pracma)  data(\"brown72\") x <- brown72  # Test white noise Wnoise.test(x) #> Wnoise Test #> #> Wnoise statistic: 135.1091 #> degrees of freedom: 31 #> p-value: 5.884182e-15 #> #> alternative hypothesis: non-independent stochastic process  # Test long memory SLmemory.test(x) #> SLmemory Test #> #> SLmemory statistic: 21.20841 #> degrees of freedom: 31 #> p-value: 0.09369624 #> #> alternative hypothesis: long memory"},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Identify Memory Patterns in Time Series Using Variance Scale Exponent","text":"MIT © 2024 vse4ts authors","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing Long Memory in Time Series — SLmemory.test","title":"Testing Long Memory in Time Series — SLmemory.test","text":"function SLmemory.test computes test statistic long memory time series based variance scale exponent. null hypothesis time series white noise short memory, alternative hypothesis time series long memory.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing Long Memory in Time Series — SLmemory.test","text":"","code":"SLmemory.test(x, m = 0.5, n = NULL)"},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing Long Memory in Time Series — SLmemory.test","text":"x time series vector. m parameter control number scales. Default 0.5. n number scales. NULL, calculated floor(N^m).","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing Long Memory in Time Series — SLmemory.test","text":"list class \"SLmemory.test\" containing following components: SLmemory test statistic df degrees freedom test. p.value p-value test.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing Long Memory in Time Series — SLmemory.test","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing Long Memory in Time Series — SLmemory.test","text":"","code":"## Test long memory in time series library(pracma)  set.seed(123) data(\"brown72\") x72 <- brown72                          #  H = 0.72 xgn <- rnorm(1024)                      #  H = 0.50 xlm <- numeric(1024); xlm[1] <- 0.1     #  H = 0.43 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1])  SLmemory.test(x72) #> SLmemory Test #>  #> SLmemory statistic: 21.20841  #> degrees of freedom: 31  #> p-value: 0.09369624  #>  #> alternative hypothesis: long memory SLmemory.test(xgn) #> SLmemory Test #>  #> SLmemory statistic: 29.06849  #> degrees of freedom: 31  #> p-value: 0.4343341  #>  #> alternative hypothesis: long memory SLmemory.test(xlm) #> SLmemory Test #>  #> SLmemory statistic: 33.53657  #> degrees of freedom: 31  #> p-value: 0.3453187  #>  #> alternative hypothesis: long memory"},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing White Noise in Time Series — Wnoise.test","title":"Testing White Noise in Time Series — Wnoise.test","text":"function Wnoise.test computes test statistic white noise time series based variance scale exponent. null hypothesis time series independent white noise, alternative hypothesis time series non-independent stochastic process.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing White Noise in Time Series — Wnoise.test","text":"","code":"Wnoise.test(x, m = 0.5, n = NULL)"},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing White Noise in Time Series — Wnoise.test","text":"x time series vector. m parameter control number scales. Default 0.5. n number scales. NULL, calculated floor(N^m).","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing White Noise in Time Series — Wnoise.test","text":"list class \"Wnoise.test\" containing following components: Wnoise test statistic df degrees freedom test. p.value p-value test.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing White Noise in Time Series — Wnoise.test","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing White Noise in Time Series — Wnoise.test","text":"","code":"## Test white noise in time series library(pracma)  set.seed(123) data(\"brown72\") x72 <- brown72                          #  H = 0.72 xgn <- rnorm(1024)                      #  H = 0.50 xlm <- numeric(1024); xlm[1] <- 0.1     #  H = 0.43 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1])  Wnoise.test(x72) #> Wnoise Test #>  #> Wnoise statistic: 135.1091  #> degrees of freedom: 31  #> p-value: 5.884182e-15  #>  #> alternative hypothesis: non-independent stochastic process Wnoise.test(xgn) #> Wnoise Test #>  #> Wnoise statistic: 27.9873  #> degrees of freedom: 31  #> p-value: 0.3781797  #>  #> alternative hypothesis: non-independent stochastic process Wnoise.test(xlm) #> Wnoise Test #>  #> Wnoise statistic: 19.58707  #> degrees of freedom: 31  #> p-value: 0.05575128  #>  #> alternative hypothesis: non-independent stochastic process"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Variance Scale Exponent of a Time Series — vse","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"Calculate variance scale exponent time series.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"","code":"vse(x, m = 0.5, n = NULL, type = c(\"weak\", \"strong\"))"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"x time series vector. m parameter control number scales. Default 0.5. n number scales. NULL, calculated floor(N^m). type type variance scale exponent. Default \"weak\".","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"variance scale exponent.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Variance Scale Exponent of a Time Series — vse","text":"","code":"## Compute the variance scale exponent of a time series # Generate a random time series set.seed(123) x <- rnorm(1024) # F = H = 0.5 also d = 0 vse(x) #> [1] 0.4987233  ## Compare the result with the Hurst exponent library(pracma)  # A time series with Hurst exponent 0.72 data(\"brown72\") x <- brown72     # F = H = 0.72 also d = 0.22 hurstexp(x) #> Simple R/S Hurst estimation:         0.6628842  #> Corrected R over S Hurst exponent:   0.7378703  #> Empirical Hurst exponent:            0.6920439  #> Corrected empirical Hurst exponent:  0.6577233  #> Theoretical Hurst exponent:          0.5404756  vse(x) #> [1] 0.7345032  # A time series with Hurst exponent 0.43 xlm <- numeric(1024); xlm[1] <- 0.1 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1]) x <- xlm         # F = H = 0.43 also d = -0.07 hurstexp(x) #> Simple R/S Hurst estimation:         0.4762169  #> Corrected R over S Hurst exponent:   0.4722421  #> Empirical Hurst exponent:            0.4872281  #> Corrected empirical Hurst exponent:  0.4460807  #> Theoretical Hurst exponent:          0.5404756  vse(x) #> [1] 0.3793589"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse4ts-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vse4ts: Identify Memory Patterns in Time Series Using Variance Scale Exponent — vse4ts-package","title":"vse4ts: Identify Memory Patterns in Time Series Using Variance Scale Exponent — vse4ts-package","text":"Methods calculating variance scale exponent identify memory patterns time series data. Includes tests white noise, short memory, long memory. See Fu, H. et al. (2018) doi:10.1016/j.physa.2018.06.092 .","code":""},{"path":[]},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse4ts-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vse4ts: Identify Memory Patterns in Time Series Using Variance Scale Exponent — vse4ts-package","text":"Maintainer: Mengyang Zheng mengyang.zheng@outlook.com Authors: Hui Fu hui_fu@hotmail.com","code":""},{"path":"https://z-my-cn.github.io/vse4ts/news/index.html","id":"vse4ts-100","dir":"Changelog","previous_headings":"","what":"vse4ts 1.0.0","title":"vse4ts 1.0.0","text":"Initial CRAN submission. Add function vse calculate variance scale exponent. Add two hypothesis test functions Wnoise.test SLmemory.test test white noise short/long memory time series, respectively.","code":""}]

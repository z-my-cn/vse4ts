[{"path":"https://z-my-cn.github.io/vse4ts/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 vse4ts authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mengyang Zheng. Author, maintainer. Hui Fu. Author.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zheng M, Fu H (2024). vse4ts: Identify Memory Patterns Time Series Using VSE. R package version 0.0.0.9002, https://z--cn.github.io/vse4ts/.","code":"@Manual{,   title = {vse4ts: Identify Memory Patterns in Time Series Using VSE},   author = {Mengyang Zheng and Hui Fu},   year = {2024},   note = {R package version 0.0.0.9002},   url = {https://z-my-cn.github.io/vse4ts/}, }"},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"vse4ts","dir":"","previous_headings":"","what":"Identify Memory Patterns in Time Series Using VSE","title":"Identify Memory Patterns in Time Series Using VSE","text":"goal vse4ts …","code":""},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify Memory Patterns in Time Series Using VSE","text":"can install development version vse4ts GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"z-my-cn/vse4ts\")"},{"path":"https://z-my-cn.github.io/vse4ts/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Identify Memory Patterns in Time Series Using VSE","text":"basic example shows solve common problem:","code":"library(vse4ts) ## basic example code"},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing Long Memory in Time Series — SLmemory.test","title":"Testing Long Memory in Time Series — SLmemory.test","text":"function SLmemory.test computes test statistic long memory time series based variance scale exponent. null hypothesis time series white noise short memory, alternative hypothesis time series long memory.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing Long Memory in Time Series — SLmemory.test","text":"","code":"SLmemory.test(x, m = 0.5)"},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing Long Memory in Time Series — SLmemory.test","text":"x time series vector. m parameter control number scales. Default 0.5.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing Long Memory in Time Series — SLmemory.test","text":"list class \"SLmemory.test\" containing following components: SLmemory test statistic df degrees freedom test. p.value p-value test.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing Long Memory in Time Series — SLmemory.test","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/SLmemory.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing Long Memory in Time Series — SLmemory.test","text":"","code":"## Test long memory in time series library(pracma)  data(\"brown72\") x72 <- brown72                          #  H = 0.72 xgn <- rnorm(1024)                      #  H = 0.50 xlm <- numeric(1024); xlm[1] <- 0.1     #  H = 0.43 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1])  SLmemory.test(x72) #> SLmemory Test #>  #> SLmemory statistic: 21.20841  #> degrees of freedom: 31  #> p-value: 0.09369624  #>  #> alternative hypothesis: long memory SLmemory.test(xgn) #> SLmemory Test #>  #> SLmemory statistic: 25.28246  #> degrees of freedom: 31  #> p-value: 0.2450581  #>  #> alternative hypothesis: long memory SLmemory.test(xlm) #> SLmemory Test #>  #> SLmemory statistic: 33.53657  #> degrees of freedom: 31  #> p-value: 0.3453187  #>  #> alternative hypothesis: long memory"},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing White Noise in Time Series — Wnoise.test","title":"Testing White Noise in Time Series — Wnoise.test","text":"function Wnoise.test computes test statistic white noise time series based variance scale exponent. null hypothesis time series independent white noise, alternative hypothesis time series non-independent stochastic process.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing White Noise in Time Series — Wnoise.test","text":"","code":"Wnoise.test(x, m = 0.5)"},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing White Noise in Time Series — Wnoise.test","text":"x time series vector. m parameter control number scales. Default 0.5.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing White Noise in Time Series — Wnoise.test","text":"list class \"Wnoise.test\" containing following components: Wnoise test statistic df degrees freedom test. p.value p-value test.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing White Noise in Time Series — Wnoise.test","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/Wnoise.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing White Noise in Time Series — Wnoise.test","text":"","code":"## Test white noise in time series library(pracma)  data(\"brown72\") x72 <- brown72                          #  H = 0.72 xgn <- rnorm(1024)                      #  H = 0.50 xlm <- numeric(1024); xlm[1] <- 0.1     #  H = 0.43 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1])  Wnoise.test(x72) #> Wnoise Test #>  #> Wnoise statistic: 135.1091  #> degrees of freedom: 31  #> p-value: 5.884182e-15  #>  #> alternative hypothesis: non-independent stochastic process Wnoise.test(xgn) #> Wnoise Test #>  #> Wnoise statistic: 38.0022  #> degrees of freedom: 31  #> p-value: 0.1805492  #>  #> alternative hypothesis: non-independent stochastic process Wnoise.test(xlm) #> Wnoise Test #>  #> Wnoise statistic: 19.58707  #> degrees of freedom: 31  #> p-value: 0.05575128  #>  #> alternative hypothesis: non-independent stochastic process"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance Scale Exponent — vse","title":"Variance Scale Exponent — vse","text":"Calculate variance scale exponent time series.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance Scale Exponent — vse","text":"","code":"vse(x, m = 0.5, type = c(\"weak\", \"strong\"))"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance Scale Exponent — vse","text":"x time series vector. m parameter control number scales. Default 0.5. type type variance scale exponent. Default \"weak\".","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance Scale Exponent — vse","text":"variance scale exponent.","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance Scale Exponent — vse","text":"Fu, H., Chen, W., & , X.-J. (2018). class estimation test long memory. Physica : Statistical Mechanics Applications (Vol. 509, pp. 906–920). Elsevier BV. https://doi.org/10.1016/j.physa.2018.06.092","code":""},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance Scale Exponent — vse","text":"","code":"## Compute the variance scale exponent of a time series # Generate a random time series set.seed(123) x <- rnorm(1024) # F = H = 0.5 also d = 0 vse(x) #> [1] 0.4987233  ## Compare the result with the Hurst exponent library(pracma)  # A time series with Hurst exponent 0.72 data(\"brown72\") x <- brown72     # F = H = 0.72 also d = 0.22 hurstexp(x) #> Simple R/S Hurst estimation:         0.6628842  #> Corrected R over S Hurst exponent:   0.7378703  #> Empirical Hurst exponent:            0.6920439  #> Corrected empirical Hurst exponent:  0.6577233  #> Theoretical Hurst exponent:          0.5404756  vse(x) #> [1] 0.7345032  # A time series with Hurst exponent 0.43 xlm <- numeric(1024); xlm[1] <- 0.1 for (i in 2:1024) xlm[i] <- 4 * xlm[i-1] * (1 - xlm[i-1]) x <- xlm         # F = H = 0.43 also d = -0.07 hurstexp(x) #> Simple R/S Hurst estimation:         0.4762169  #> Corrected R over S Hurst exponent:   0.4722421  #> Empirical Hurst exponent:            0.4872281  #> Corrected empirical Hurst exponent:  0.4460807  #> Theoretical Hurst exponent:          0.5404756  vse(x) #> [1] 0.3793589"},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse4ts-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vse4ts: Identify Memory Patterns in Time Series Using VSE — vse4ts-package","title":"vse4ts: Identify Memory Patterns in Time Series Using VSE — vse4ts-package","text":"Constructing variance scale exponent, achieves identification memory patterns time series, especially identification long memory.","code":""},{"path":[]},{"path":"https://z-my-cn.github.io/vse4ts/reference/vse4ts-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vse4ts: Identify Memory Patterns in Time Series Using VSE — vse4ts-package","text":"Maintainer: Mengyang Zheng mengyang.zheng@outlook.com Authors: Hui Fu hui_fu@hotmail.com","code":""}]
